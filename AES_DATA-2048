This  standard  specifies  the  Rijndael  algorithm  ([3]  and  [4]),  a  symmetric  block  cipher  that  can  process  data  blocks  of  128  bits,  using  cipher  keys  with  lengths  of  128,  192,  and  256  bits. Rijndael  was  designed  to  handle  additional  block  sizes  and  key  lengths,  however  they  are  not  adopted in this standard. Throughout  the  remainder  of  this  standard,  the  algorithm  specified  herein  will  be  referred  to  as  “the AES algorithm.”  The algorithm may be used with the three different key lengths indicated above, and therefore these different “flavors” may be referred to as “AES-128”, “AES-192”, and “AES-256”. This specification includes the following sections: 2.Definitions of terms, acronyms, and algorithm parameters, symbols, and functions; 3.Notation and conventions used in the algorithm specification, including the ordering and numbering of bits, bytes, and words; 4.Mathematical properties that are useful in understanding the algorithm; 5.Algorithm specification, covering the key expansion, encryption, and decryption routines; 6.Implementation  issues,  such  as  key  length  support,  keying  restrictions,  and  additional  block/key/round sizes. The standard concludes with several appendices that include step-by-step examples for Key Expansion and the Cipher, example vectors for the Cipher and Inverse Cipher, and a list of references.
 
The input and output for the AES algorithm each consist of sequences of 128 bits (digits with values  of  0  or  1).   These  sequences  will  sometimes  be  referred  to  as  blocks  and  the  number  of  bits they contain will be referred to as their length. The Cipher Key for the AES algorithm is a sequence of 128, 192 or 256 bits.  Other input, output and Cipher Key lengths are not permitted by this standard.

The bits within such sequences will be numbered starting at zero and ending at one less than the sequence length (block or key length).The basic unit for processing in the AES algorithm is a byte
